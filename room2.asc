// room script file
int monHP[6];
int monSTR[6];
int monSPD[6];
int monEXP[6];  //how much exp the monster gives
int charturn; //which char is fighting
int which;    //which char gets hit
int sidekick; //who is the partner
int current_monsterset; // which monsterset is currently used
int alivemonsters; //how many monsters are still alive
int monturn[10];
int playerturn[10];
int turn[10]; //to remove later
int oncecounter=0;
int temprand;
int monindex=0;
int chitick=0; //rate at which chi increases naturally
int currentmonster; //monster whose turn it is
int currentplayer;
int loopcount;
string buffer2;
string monname;
int turnflag; //0 for player turn, 1 for enemy turn
int monster_round;
int player_round;

function get_monsterset()
{
  int maxset;
  int minset;
  
  if (GetGlobalInt(49)==1) //FIRST REGION
  {
    
  if (partner[0].level<3)
  {
  minset=1;
  maxset=5;
  }
  else if (partner[0].level<6)
  {
  minset=1;
  maxset=10;
  }
  else if (partner[0].level<10)
  {
  minset=6;
  maxset=10;
  }
  else
  {
  minset=8;
  maxset=12;
  }
  }
  if (GetGlobalInt(49)==2) //SECOND REGION
  {
  if (partner[0].level<4)
  {
  minset=21;
  maxset=10;
  }
  else if (partner[0].level<10)
  {
  minset=25;
  maxset=10;
	}
	else
  {
  minset=32;
  maxset=8;
	}
	}
  if (GetGlobalInt(49)==3) //THIRD REGION
  {
  if (partner[0].level<6)
  {
  minset=21;
  maxset=10;
  }
  else if (partner[0].level<15)
  {
  minset=20;
  maxset=30;
	}
	else
  {
  minset=15;
  maxset=20;
}
}
  if (GetGlobalInt(49)==4) //FOURTH REGION
  {
  if (partner[0].level<10)
  {
  minset=30;
  maxset=15;
  }
  else if (partner[0].level<20)
  {
  minset=35;
  maxset=14;
	}
	else
  {
  minset=32;
  maxset=19;
  }
}

//if (GetGlobalInt(16)==1)
//{
//  minset+=1;
//  maxset+=1;
//  }

  current_monsterset=Random(maxset)+(minset); // to change later
  if (current_monsterset<minset) current_monsterset=minset;
  if (current_monsterset>maxset) current_monsterset=maxset;
  SetGlobalInt(10, current_monsterset);
}

function initialise_monsterset()
{
 int counter=1;
 
  while (counter<= monsterset[current_monsterset].max) 
	{
		monindex=monsterset[current_monsterset].index[counter];  
		character[41+counter].view=(monsters[monindex].view-1);  
  
		monsterset[current_monsterset].battleHP[counter]=monsters[monsterset[current_monsterset].index[counter]].hp;
		monsterset[current_monsterset].battletype[counter]=monsters[monsterset[current_monsterset].index[counter]].montype;
		monSPD[counter]=monsters[monsterset[current_monsterset].index[counter]].speed;
		counter+=1;
  }
    
}


function set_turn()
{
	if (currentmonster>monsterset[current_monsterset].max) 
	{
		currentmonster=1;
		monster_round=1; //gone back round
	}
	if (player_round==0)
	{
		if (monster_round==0)
		{
			if (monsters[monsterset[current_monsterset].index[monturn[currentmonster]]].speed > partner[playerturn[GetGlobalInt(11)]].speed)
			{
				turnflag=1;
			}
			else
			{
				turnflag=0;
			}
		}
		else turnflag=0;
	}
	else if (monster_round==1)
	{
		if (monsters[monsterset[current_monsterset].index[monturn[currentmonster]]].speed > partner[playerturn[GetGlobalInt(11)]].speed)
		{
			turnflag=1;
		}
		else
		{
			turnflag=0;
		}
		monster_round=0;
		player_round=0;
	}
	else turnflag=1;
}

function initialise_turn()
{
  int tempholder;
	int overallnumber;
	int monsterloop;
	string buffer;

	tempholder=1;
	monsterloop=1;
	loopcount=1;
	overallnumber=monsterset[current_monsterset].max;

	while (loopcount<=overallnumber)
	{
		while (monsterloop<=monsterset[current_monsterset].max)
		{ 
			if (monSPD[monsterloop]>=monSPD[tempholder]) //monster is faster, his turn first
			{
				if (monsterloop!=tempholder)
				tempholder=monsterloop;
			}//endif
			monsterloop+=1;
		}//endwhile
		monsterloop=1; 
		monturn[overallnumber]=tempholder;
		StrFormat (buffer, "%d", monSPD[tempholder]);
		monSPD[tempholder]=-1; //removes that monster from getting chosen
		tempholder=0;
		loopcount+=1;
	}//endwhile

	//to refine later
	playerturn[1]=0;
	playerturn[2]=1;

	SetGlobalInt(11, 0);

	monster_round=0;
	player_round=0;

	set_turn();
}//end function
#sectionstart room_a  // DO NOT EDIT OR REMOVE THIS LINE
function room_a() 
{
  // script for room: Player enters screen (after fadein)
	string temptext;
  string temp2;

  RemoveWalkableArea(1);
  SetSpeechStyle(eSpeechSierra);
  //if player is stronger than monster, divide exp given by 2
  
  if (GetGlobalInt(20)==2 && mission[2].index==3)  //first easy mission in the woods
		cBrother.Say("Holy crap! this Tamashii is huge!!!");
}
#sectionend room_a  // DO NOT EDIT OR REMOVE THIS LINE

#sectionstart room_b  // DO NOT EDIT OR REMOVE THIS LINE
function room_b() {
  // script for room: Player enters screen (before fadein)
    
  string buffer1;
  int tempbuff;
  
  get_monsterset();

  sidekick=GetGlobalInt(52);
  
  //setting Action Points
  SetGlobalInt(7,partner[0].chi+partner[sidekick].chi);
  SetGlobalInt(8,partner[0].chi+partner[sidekick].chi);


  if (GetGlobalInt(20)==2 && mission[2].index==3)  //monster in the woods mission
		current_monsterset=101;
		
	if (GetGlobalInt(199)==20)   //story boss time
		current_monsterset=18; //guild master
  
  SetGlobalInt(12, monsterset[current_monsterset].index[1]);
  monindex=monsterset[current_monsterset].index[1];
  
	cEgo.ChangeView(6);
  SetBackgroundFrame(0);
  
  currentmonster=1;
  
  GUIOff(0);
  GUIOn(3); //hp under ego
  GUIOn(5); //hp under partner
  //GUIOn(6); //battle gui
  GUIOn(11); //chi gui

	gBrolevel.SetPosition(40, 149);
  
	statusmessage();

	//place partner on screen
  character[partner[sidekick].view].room=2;
  character[partner[sidekick].view].view=GetCharacterProperty(partner[sidekick].view,"type");
  character[partner[sidekick].view].x=72;
  character[partner[sidekick].view].y=151;

  //if there's a caravan, place it on screen
  if (GetGlobalInt(17)==1)
  {
    character[35].room=2;
    character[partner[sidekick].view].x=40;
    character[partner[sidekick].view].y=180;
    gBrolevel.SetPosition(12, 178);

  }

  //*********************************monster creating*************************************//
  
 initialise_monsterset();
 
  //*****************************end of monster creating********************//
  

	initialise_turn();

	loopcount=1;
	
	while (loopcount<=monsterset[current_monsterset].max)
	{
	character[41+loopcount].room=2;
	if (loopcount==1)
	{
	  character[41+loopcount].x=270;
    character[41+loopcount].y=143;
	}
	else if (loopcount==2)
	{
	  character[41+loopcount].x=225;
    character[41+loopcount].y=175;
  }
	else if (loopcount==3)
	{
	  character[41+loopcount].x=195;
    character[41+loopcount].y=140;
  }
	else if (loopcount==4)
	{
	  character[41+loopcount].x=275;
    character[41+loopcount].y=178;
	}
	else if (loopcount==5)
	{
	  character[41+loopcount].x=295;
    character[41+loopcount].y=157;
  }
	loopcount+=1;
	}
  
  //if (monsters[monsterset[current_monsterset].index[monturn[1]]].speed>partner[0].speed)
  //{
	//	turnflag=1;
	//}
	//else
	//{
	//	turnflag=0;
	//}
	
	currentmonster=1;

	turnflag=-1;
	
  SetGlobalInt(12,0);			//monster type
  SetGlobalInt(13,0);            //number of dead enemies
}
#sectionend room_b  // DO NOT EDIT OR REMOVE THIS LINE

#sectionstart room_c  // DO NOT EDIT OR REMOVE THIS LINE
function room_c() {
  // script for room: Repeatedly execute

statusmessage();

if (turnflag==-1 && IsGUIOn(6)==0)
{ 
   set_turn();
}

//monster AI

if (GetGlobalInt(70)==1) //escaped battle
{
  Display("Escape successful!");
  SetGlobalInt(70, 0);
  loopcount=1;
	
	while (loopcount<=monsterset[current_monsterset].max)
	{
	character[40+loopcount].room=-1;
  character[35].room=-1;
  loopcount+=1;
	}

	//reset for leaving battle
  SetGlobalInt(0, 0);
  SetGlobalInt(1, 0);
  character[partner[sidekick].view].ChangeView(10);
  cEgo.ChangeView(10);
  GUIOff(10);
  GUIOff(6);
  GUIOff(3);
  GUIOff(5);
  GUIOff(11);

	SetPlayerCharacter(0);
	int roomchange=character[0].PreviousRoom;
  NewRoomEx(roomchange,GetGlobalInt(50),GetGlobalInt(51));
}

else if (GetGlobalInt(13)==monsterset[current_monsterset].max) //turn of the dead
{
  int i=1;
  string temptext;
  string temp2;
  
  Display("monsters are dead");
  while (i<100) 
  { 
   SetCharacterTransparency(1, i);
   i+=2;
   Wait(1);
   }
  character[1].room=-1;
  SetCharacterTransparency(1,0);
  
  loopcount=1;
	while (loopcount<=monsterset[current_monsterset].max)
	{
	character[40+loopcount].room=-1;
  character[35].room=-1;
  loopcount+=1;
	}
  
  if (GetGlobalInt(20)==2 && mission[2].index==3) //mission 2 finished
  {
   cEgo.Say("we were so lucky to survive this!");
   Display("you received a rusty sword");
     AddInventoryToCharacter(0,18);
     mission[2].index=10;
 }
  
 int randgive;
 int counter=1;
 while (counter<=monsterset[current_monsterset].max)  
	{
	randgive=Random(20); 
  if (randgive==1) //rare
  {
    if (monsters[monsterset[current_monsterset].index[counter]].index[2]!=-1) // it does give something
    {
      StrCopy(temp2, "you received ");
      GetInvName(monsters[monsterset[current_monsterset].index[counter]].index[2], temptext);
      StrCat(temp2,  temptext);
      Display(temp2);
      AddInventoryToCharacter(2,monsters[monsterset[current_monsterset].index[counter]].index[2]);
    }
  }
	else if (randgive<5)
	{
	  if (monsters[monsterset[current_monsterset].index[counter]].index[1]!=-1) // it does give something
    {
      StrCopy(temp2, "you received ");
      GetInvName(monsters[monsterset[current_monsterset].index[counter]].index[1], temptext);
      StrCat(temp2,  temptext);
      Display(temp2);
      AddInventoryToCharacter(2,monsters[monsterset[current_monsterset].index[counter]].index[1]);
     }
  }
  else if (randgive<15)
  {
    if (monsters[monsterset[current_monsterset].index[counter]].index[0]!=-1) // it does give something
    {
      StrCopy(temp2, "you received ");
      GetInvName(monsters[monsterset[current_monsterset].index[counter]].index[0], temptext);
      StrCat(temp2,  temptext);
      Display(temp2);
      AddInventoryToCharacter(2,monsters[monsterset[current_monsterset].index[counter]].index[0]);
    }
}
counter+=1;
  }
  //receive experience
  temprand=Random(GetGlobalInt(0));
  temprand=temprand/(partner[0].level+10);
  partner[0].exp+=monsterset[current_monsterset].experience+temprand;
  GetGlobalString(partner[0].name,temptext);
  StrCat(temptext," gained ");
  StrFormat(temp2,"%d points of experience",monsterset[current_monsterset].experience+temprand);
  StrCat(temptext,temp2);
  slow_text(temptext,1,131,100,3,65500);
  Wait(10);
  
  //brother experience
  temprand=Random(GetGlobalInt(1));
  temprand=temprand/(partner[sidekick].level+10);
  partner[sidekick].exp+=monsterset[current_monsterset].experience+temprand;
  GetGlobalString(partner[sidekick].name,temptext);
  StrCat(temptext," gained ");
  StrFormat(temp2,"%d points of experience",monsterset[current_monsterset].experience+temprand);
  StrCat(temptext,temp2);
  slow_text(temptext,3,131,120,3,65500);
  StrCopy(temptext, "");
  slow_text(temptext,2,121,100,3,65500);
  slow_text(temptext,4,121,120,3,65500);
  
  //chakra experience
  chakra[partner[0].chakratype].exp+=10;

  
  //reset for leaving battle
  SetGlobalInt(0, 0);
  SetGlobalInt(1, 0);
  character[partner[sidekick].view].ChangeView(10);
  cEgo.ChangeView(10);
  character[35].room=-1;
  GUIOff(10);
  GUIOff(6);
  GUIOff(3);
  GUIOff(5);
  GUIOff(11);
  
//level ups
if (partner[0].exp>partner[0].levelup)
{
  while (partner[0].exp>partner[0].levelup)
  {
   level_up(0);
		}
	
    SetBackgroundFrame(1);
SetSpeechStyle(eSpeechSierra);
    GetGlobalString(partner[0].name,temptext);
    StrCat(temptext," is now at level ");
    StrFormat(temp2,"%d",partner[0].level);
    StrCat(temptext,temp2);
	  int over0=CreateTextOverlay(9,78,400,3,65500,temptext);
	  Wait(80);
    StrFormat(temptext,"strength is now %d",partner[0].strength);
    int over1=CreateTextOverlay(9,98,400,3,65500,temptext);
    Wait(40);
    StrFormat(temptext,"HP is now %d",partner[0].maxhp);
    int over2=CreateTextOverlay(9,108,400,3,65500,temptext);
    Wait(40);
    StrFormat(temptext,"CHI is now %d",partner[0].maxchi);
    int over3=CreateTextOverlay(9,118,400,3,65500,temptext);
    Wait(40);
    StrFormat(temptext,"defense is now %d",partner[0].defense);
    int over4=CreateTextOverlay(9,128,400,3,65500,temptext);
    Wait(80);
    partner[0].hp=partner[0].maxhp;
    partner[0].mp=partner[0].maxmp;
    partner[0].chi=partner[0].maxchi;
    RemoveOverlay(over0);
    RemoveOverlay(over1);
    RemoveOverlay(over2);
    RemoveOverlay(over3);
    RemoveOverlay(over4);   
        SetSpeechStyle(eSpeechSierraWithBackground);
}

if (partner[sidekick].exp>partner[sidekick].levelup)
  {
  while (partner[sidekick].exp>partner[sidekick].levelup)
  {
   level_up(sidekick);
   }
    SetBackgroundFrame(2);
    SetSpeechStyle(eSpeechSierra);
    GetGlobalString(partner[sidekick].name,temptext);
    StrCat(temptext," is now at level ");
    StrFormat(temp2,"%d",partner[sidekick].level);
    StrCat(temptext,temp2);
    int over0=CreateTextOverlay(9,78,400,3,65500,temptext);
    Wait(80);
    StrFormat(temptext,"strength is now %d",partner[sidekick].strength);
    int over1=CreateTextOverlay(9,98,400,3,65500,temptext);
    Wait(40);
    StrFormat(temptext,"HP is now %d",partner[sidekick].maxhp);
    int over2=CreateTextOverlay(9,108,400,3,65500,temptext);
    Wait(40);
    StrFormat(temptext,"CHI is now %d",partner[sidekick].maxchi);
    int over3=CreateTextOverlay(9,118,400,3,65500,temptext);
    Wait(40);
    StrFormat(temptext,"defense is now %d",partner[sidekick].defense);
    int over4=CreateTextOverlay(9,128,400,3,65500,temptext);
    Wait(80);
    partner[sidekick].hp=partner[sidekick].maxhp;
    partner[sidekick].mp=partner[sidekick].maxmp;
    partner[sidekick].chi=partner[sidekick].maxchi;
    RemoveOverlay(over0);
    RemoveOverlay(over1);
    RemoveOverlay(over2);
    RemoveOverlay(over3);
    RemoveOverlay(over4); 
    SetSpeechStyle(eSpeechSierraWithBackground);
  }



	SetPlayerCharacter(0);
	
		//mosnter number in map screen
	if (partner[0].level>20) SetGlobalInt(9,6);
	else if (partner[0].level>10) SetGlobalInt(9,5);
	else if (partner[0].level>3) SetGlobalInt(9,4);
	
	SetSpeechStyle(eSpeechSierraWithBackground);
	
	int roomchange=character[0].PreviousRoom;
	if (GetGlobalInt(199)==20)
 {
   SetGlobalInt(199, 21);
   NewRoom(19);
  }
  else  
	NewRoomEx(roomchange,GetGlobalInt(50),GetGlobalInt(51));
 }
 
else if (turnflag==1 && IsGUIOn(6)==0)  // MONSTER'S TURN	
{
  if (monsterset[current_monsterset].battleHP[currentmonster]>=1)
  {
		character[0].ChangeView(6); //resets player to greyscale
		character[partner[sidekick].view].view=GetCharacterProperty(partner[sidekick].view,"type");
		int rndact;//chooses which player to attack
		rndact=Random(100);
		if (rndact>50)
			which=0;
		else
			which=sidekick;

		chitick+=partner[which].level*2;
		if (chitick>10)
		{
			SetGlobalInt(8, GetGlobalInt(8)+(partner[which].level/2)+1);
			if (GetGlobalInt(8)>GetGlobalInt(7))
				SetGlobalInt(8, GetGlobalInt(7));
			chitick=0;
		}

	if (GetGlobalInt(15)>-1) //player is protecting
		which=GetGlobalInt(15);
 
	else if (rndact<10)  // separate action
	{
		int warning=CreateTextOverlay(110,160,100,3,65500,"the enemy focuses");
		Wait(25);
		RemoveOverlay(warning);
	}
	else if (GetGlobalInt(17)==1 && (rndact<10 || rndact>80))  //hurt caravan
	{
		int i=0;
		int damage=monsters[monsterset[current_monsterset].index[currentmonster]].str-Random(monsters[monsterset[current_monsterset].index[currentmonster]].str/2);

		int warning=CreateTextOverlay(110,160,100,3,65500,"the enemy attacks");
		Wait(25);
		RemoveOverlay(warning);
		PlaySound(2);

		while (i<100) 
		{ 
			SetCharacterTransparency(35, i);
			i+=15;
			Wait(1);
		}
	
		SetCharacterTransparency(35, 0);
		Wait(1);
		i=0;
	
		while (i<100) 
		{ 
			SetCharacterTransparency(35, i);
			i+=15;
			Wait(1);
		}
	
		SetCharacterTransparency(35, 0);
		Wait(10);
	
		SetGlobalInt(18, GetGlobalInt(18)-damage);
		hptext(damage,character[35].x,63488);
		if (GetGlobalInt(18)<0)
		{
			Display("the caravan was destroyed");
			character[35].room=-1;
			SetGlobalInt(17, 0);
			if (GetGlobalInt(20)==2)  //was this a mission?
			{
			  if ((mission[2].index>0) && (mission[2].index<10)) //caravan mission
				 mission[2].index=11; //mission failed, caravan has been destroyed
			}
		}
	}
	else
	{
		int damage=monsters[monsterset[current_monsterset].index[currentmonster]].str+Random(partner[which].level);

		if (chakra[partner[which].chakratype].weak==monsterset[current_monsterset].battletype[monturn[currentmonster]])
			damage+=damage/4;
		else if (chakra[monsterset[current_monsterset].battletype[monturn[currentmonster]]].weak==partner[which].chakratype)
			damage-=damage/4;
		damage-=partner[which].defense+shields[partner[which].shieldID].def+rings[partner[which].ringID].def+swords[partner[which].weaponID].def;   //shield
		//damage-=swords[partner[which].weaponID].def;
		if (damage<1)  damage=1;
		int warning=CreateTextOverlay(110,160,100,3,65500,"the enemy attacks");
		Wait(25);
		RemoveOverlay(warning);
		PlaySound(2);
   
		int i=0;
		int whichchar=partner[which].view;	
		while (i<100) 
		{ 
       SetCharacterTransparency(whichchar, i);
			 i+=15;
			Wait(1);
		}
	
		SetCharacterTransparency(whichchar, 0);
		Wait(1);
		i=0;
	
		while (i<100) 
		{ 
      SetCharacterTransparency(whichchar, i);
			i+=15;
			Wait(1);
		}
	
		SetCharacterTransparency(whichchar, 0);
		Wait(10);

		hptext(damage,character[whichchar].x,63488);
		if (which>0)
			which=sidekick;
		character_hit(damage,which);
	} //end of else hurting a player
}
SetGlobalInt(15, -1);
currentmonster+=1;

if (currentmonster>monsterset[current_monsterset].max) 
{
currentmonster=1;
monster_round=1; //gone back round
}
turnflag=-1;
 

}

else if (IsGUIOn(6)==0)
{
if (turnflag==0)
{
  if (currentplayer==1)
{
	character[0].ChangeView(6);
	character[18].ChangeView(12);
	}
	else
	{
	character[0].ChangeView(2);
	character[18].ChangeView(23);
	}
	
  SetGlobalInt(11, currentplayer);
GetGlobalString(partner[GetGlobalInt(11)].name,buffer2);
StrCat(buffer2, "'s turn");
int warning=CreateTextOverlay(121,160,100,3,65500,buffer2);
Wait(25);
RemoveOverlay(warning);
chitick+=partner[GetGlobalInt(11)].level;

Wait(10);

currentplayer+=1;
if (currentplayer>1) 
{
  currentplayer=0;
  player_round=1;
}
  turnflag=-1;

SetButtonPic(6, 8, 1, partner[GetGlobalInt(11)].sprite);
GUIOn(6);
}
}

//if (IsGUIOn(6)==0)
//{
//SetGlobalInt(12,GetGlobalInt(12)+1);
//if (GetGlobalInt(12)>2) SetGlobalInt(12,0);
//Wait(50);
//if (turn[GetGlobalInt(12)]!=-1)
//{
//GetGlobalString(partner[GetGlobalInt(11)].name,buffer2);
//StrCat(buffer2, "'s turn");

//int warning=CreateTextOverlay(121,160,100,3,65500,buffer2);
//Wait(25);
//RemoveOverlay(warning);
//}
//Wait(50);
//}
}
//}

#sectionend room_c  // DO NOT EDIT OR REMOVE THIS LINE
